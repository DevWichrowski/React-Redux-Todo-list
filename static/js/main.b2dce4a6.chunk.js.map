{"version":3,"sources":["store/actions/todoListActions.js","components/Task/Task.js","components/TodoList/TodoList.js","store/reducers/todoListReducer.js","components/AddTask/AddTask.js","components/ShowTask/ShowTask.js","components/EditTask/EditTask.js","components/AddTaskButton/AddTaskButton.js","components/Main/Main.js","App.js","serviceWorker.js","store/reducers/rootReducer.js","store/localStorage/configureStore.js","index.js"],"names":["ADD_TASK","DELETE_TASK","SHOW_TASK","EDIT_TASK","SHOW_BUTTON_HANDLER","ADD_DIALOG_HANDLER","EDIT_DIALOG_HANDLER","showButtonHandler","type","addDialogHandler","editDialogHandler","Task","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","lineThru","setState","taskDone","state","_this2","react_default","a","createElement","className","onClick","name","primereact_button","label","icon","showTask","toggleShowTask","toggleEditDialogHandler","deleteTask","Component","connect","dispatch","payload","deleteTaskAction","showTaskAction","TodoList","todoList","tasks","map","item","index","key","components_Task_Task","id","description","toggleAddTaskDialog","idGenerator","Math","random","toString","substr","initialState","showName","showDescription","editedItemId","showTaskVisible","addDialogVisible","editDialogVisible","AddTask","saveName","e","tempName","target","value","saveDescription","tempDescription","dialog","header","visible","width","modal","onHide","onChange","maxLength","addItem","disabled","addTaskAction","ShowTask","concat","EditTask","newName","newDescription","editTask","editTaskAction","AddTaskButton","Main","components_TodoList_TodoList","components_AddTask_AddTask","components_ShowTask_ShowTask","components_EditTask_EditTask","components_AddTaskButton_AddTaskButton","App","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","match","rootReducer","combineReducers","arguments","length","undefined","action","TodoListAction","task","objectSpread","toConsumableArray","filter","persistConfig","storage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","Provider","integration_react","loading","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wbAAaA,EAAW,qBACXC,EAAc,qCACdC,EAAY,mBACZC,EAAY,mBACZC,EAAsB,wBACtBC,EAAqB,2BACrBC,EAAsB,4BAMtBC,EAAoB,iBAAO,CAACC,KAAMJ,IAClCK,EAAmB,iBAAO,CAACD,KAAMH,IACjCK,EAAoB,iBAAO,CAACF,KAAMF,YCCzCK,uCACL,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAMPQ,SAAW,WACVP,EAAKQ,SAAS,CAACC,UAAWT,EAAKU,MAAMD,YANrCT,EAAKU,MAAQ,CACZD,UAAU,GAHOT,wEAWV,IAAAW,EAAAR,KACR,OACCS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACdH,EAAAC,EAAAC,cAAA,OAAKC,WAAmC,IAAxBZ,KAAKJ,MAAMU,SAAoB,mBAAqB,wBAAyBO,QAAS,kBAAML,EAAKJ,aAChHK,EAAAC,EAAAC,cAAA,aAAKX,KAAKJ,MAAMkB,KAAhB,MAEDL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACdH,EAAAC,EAAAC,cAACI,EAAA,OAAD,CACCC,MAAM,OACNC,KAAK,aACLL,UAAU,mBACVC,QAAS,WACRL,EAAKZ,MAAMsB,SAASV,EAAKZ,OACzBY,EAAKZ,MAAMuB,oBAGbV,EAAAC,EAAAC,cAACI,EAAA,OAAD,CACCC,MAAM,OACNC,KAAK,gBACLL,UAAU,gBACVC,QAAS,WACRL,EAAKZ,MAAMsB,SAASV,EAAKZ,OACzBY,EAAKZ,MAAMwB,6BAGbX,EAAAC,EAAAC,cAACI,EAAA,OAAD,CACCC,MAAM,SACNC,KAAK,YACLL,UAAU,kBACVC,QAAS,kBAAML,EAAKZ,MAAMyB,WAAWb,EAAKZ,mBAzC7B0B,cAwDJC,cAAQ,KAPI,SAACC,GAAD,MAAe,CACzCH,WAAY,SAACI,GAAD,OAAaD,EDxDM,SAACC,GAAD,MAAc,CAAEjC,KAAMP,EAAawC,WCwDhCC,CAAiBD,KACnDP,SAAU,SAACO,GAAD,OAAaD,EDxDM,SAACC,GAAD,MAAc,CAAEjC,KAAMN,EAAWuC,WCwD9BE,CAAeF,KAC/CN,eAAgB,kBAAMK,EAASjC,MAC/B6B,wBAAyB,kBAAMI,EAAS9B,QAG1B6B,CAAkC5B,GCjE3CiC,0LAEJ,OACCnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbZ,KAAKJ,MAAMiC,SAASC,MAAMC,IAAI,SAACC,EAAMC,GACrC,OACCxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASsB,IAAKD,GAC5BxB,EAAAC,EAAAC,cAACwB,EAAD,CAAMC,GAAIJ,EAAKI,GAAItB,KAAMkB,EAAKlB,KAAMuB,YAAaL,EAAKK,yBAPtCf,cAwBRC,cARS,SAAChB,GAAD,MAAY,CACnCsB,SAAUtB,EAAMsB,WAGU,SAACL,GAAD,MAAe,CACzCc,oBAAqB,kBAAMd,EAAS/B,QAGtB8B,CAA6CK,2BC5B/CW,EAAc,WAC1B,MAAO,IAAMC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,IAG7CC,EAAe,CACpBd,MAAO,CACN,CACCM,GAAIG,IACJzB,KAAM,QACNuB,YAAa,gCAEd,CACCD,GAAIG,IACJzB,KAAM,QACNuB,YAAa,iCAGfQ,SAAU,GACVC,gBAAiB,GACjBC,aAAc,GACdC,iBAAiB,EACjBC,kBAAkB,EAClBC,mBAAmB,eChBdC,cACL,SAAAA,EAAYvD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmD,IAClBtD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqD,GAAAhD,KAAAH,KAAMJ,KAQPwD,SAAW,SAACC,GACXxD,EAAKQ,SAAS,CAAEiD,SAAUD,EAAEE,OAAOC,SAVjB3D,EAanB4D,gBAAkB,SAACJ,GAClBxD,EAAKQ,SAAS,CAAEqD,gBAAiBL,EAAEE,OAAOC,SAX1C3D,EAAKU,MAAQ,CACZ+C,SAAU,GACVI,gBAAiB,IALA7D,wEAgBV,IAAAW,EAAAR,KACR,OACCS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACdH,EAAAC,EAAAC,cAACgD,EAAA,OAAD,CACCC,OAAO,kBACPC,QAAS7D,KAAKJ,MAAMiC,SAASoB,iBAC7Ba,MAAM,QACNC,OAAO,EACPC,OAAQhE,KAAKJ,MAAM0C,qBAEnB7B,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,SAAOsD,SAAUjE,KAAKoD,SAAUI,MAAOxD,KAAKO,MAAM+C,SAAUY,UAAW,KACvEzD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,YAAUsD,SAAUjE,KAAKyD,gBAAiBD,MAAOxD,KAAKO,MAAMmD,gBAAiBQ,UAAW,MACxFzD,EAAAC,EAAAC,cAAA,WACyB,KAAxBX,KAAKO,MAAM+C,SACX7C,EAAAC,EAAAC,cAACI,EAAA,OAAD,CACCC,MAAM,MACNC,KAAK,oBACLL,UAAU,mBACVC,QAAS,WACRL,EAAKZ,MAAMuE,QAAQ,CAClB/B,GAAIG,IACJzB,KAAMN,EAAKD,MAAM+C,SACjBjB,YAAa7B,EAAKD,MAAMmD,kBAEzBlD,EAAKH,SAAS,CAAE+B,GAAI,GAAIkB,SAAU,GAAII,gBAAiB,KACvDlD,EAAKZ,MAAM0C,yBAIb7B,EAAAC,EAAAC,cAACI,EAAA,OAAD,CACCC,MAAM,MACNC,KAAK,oBACLL,UAAU,mBACVC,QAAS,WACRL,EAAKZ,MAAMuE,QAAQ,CAClB/B,GAAIG,IACJzB,KAAMN,EAAKD,MAAM+C,SACjBjB,YAAa7B,EAAKD,MAAMmD,kBAEzBlD,EAAKH,SAAS,CAAE+B,GAAI,GAAIkB,SAAU,GAAII,gBAAiB,KACvDlD,EAAKZ,MAAM0C,uBAEZ8B,UAAQ,aA9DO9C,aAgFPC,cAJS,SAAChB,GAAD,MAAY,CACnCsB,SAAUtB,EAAMsB,WANU,SAACL,GAAD,MAAe,CACzC2C,QAAS,SAAC1C,GAAD,OAAaD,EJxEM,SAACC,GAAD,MAAc,CAAEjC,KAAMR,EAAUyC,WIwE7B4C,CAAc5C,KAC7Ca,oBAAqB,kBAAMd,EAAS/B,QAOtB8B,CAA6C4B,GClFtDmB,qBACL,SAAAA,EAAY1E,GAAQ,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAsE,GAAAxE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwE,GAAAnE,KAAAH,KACbJ,0EAGN,OACCa,EAAAC,EAAAC,cAACgD,EAAA,OAAD,CAAQC,OAAM,GAAAW,OAAKvE,KAAKJ,MAAMiC,SAASgB,UAAYgB,QAAS7D,KAAKJ,MAAMiC,SAASmB,gBAAiBc,MAAM,QAAQC,OAAO,EAAMC,OAAQhE,KAAKJ,MAAMuB,gBAC9IV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACdH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SAAIX,KAAKJ,MAAMiC,SAASgB,UACxBpC,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAQZ,KAAKJ,MAAMiC,SAASiB,0BAXvBxB,cAyBRC,cAPS,SAAChB,GAAD,MAAY,CACnCsB,SAAUtB,EAAMsB,WAGU,SAACL,GAAD,MAAe,CACzCL,eAAgB,kBAAMK,EAASjC,QAEjBgC,CAA6C+C,GCxBtDE,qBACL,SAAAA,EAAY5E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwE,IAClB3E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0E,GAAArE,KAAAH,KAAMJ,KAQPwD,SAAW,SAACC,GACXxD,EAAKQ,SAAS,CAAEoE,QAASpB,EAAEE,OAAOC,SAVhB3D,EAanB4D,gBAAkB,SAACJ,GAClBxD,EAAKQ,SAAS,CAAEqE,eAAgBrB,EAAEE,OAAOC,SAXzC3D,EAAKU,MAAQ,CACZkE,QAAS,GACTC,eAAgB,IALC7E,wEAiBV,IAAAW,EAAAR,KACR,OACCS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACdH,EAAAC,EAAAC,cAACgD,EAAA,OAAD,CACCC,OAAM,mBAAAW,OAAqBvE,KAAKJ,MAAMiC,SAASgB,SAAzC,SACNgB,QAAS7D,KAAKJ,MAAMiC,SAASqB,kBAC7BY,MAAM,QACNC,OAAO,EACPC,OAAQhE,KAAKJ,MAAMwB,yBAEnBX,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SAAOsD,SAAUjE,KAAKoD,SAAUc,UAAW,KAC3CzD,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,YAAUsD,SAAUjE,KAAKyD,gBAAiBS,UAAW,MACrDzD,EAAAC,EAAAC,cAAA,WACwB,KAAvBX,KAAKO,MAAMkE,QACXhE,EAAAC,EAAAC,cAACI,EAAA,OAAD,CACCC,MAAM,OACNC,KAAK,gBACLJ,QAAS,WACRL,EAAKZ,MAAM+E,SAAS,CACnB7D,KAAMN,EAAKD,MAAMkE,QACjBpC,YAAa7B,EAAKD,MAAMmE,oBAK3BjE,EAAAC,EAAAC,cAACI,EAAA,OAAD,CACCC,MAAM,OACNC,KAAK,gBACLJ,QAAS,WACRL,EAAKZ,MAAM+E,SAAS,CACnB7D,KAAMN,EAAKD,MAAMkE,QACjBpC,YAAa7B,EAAKD,MAAMmE,kBAG1BN,UAAQ,aAtDQ9C,cAuERC,cATS,SAAChB,GAAD,MAAY,CACnCsB,SAAUtB,EAAMsB,WAGU,SAACL,GAAD,MAAe,CACzCmD,SAAU,SAAClD,GAAD,OAAaD,EN/DM,SAACC,GAAD,MAAc,CAAEjC,KAAML,EAAWsC,WM+D9BmD,CAAenD,KAC/CL,wBAAyB,kBAAMI,EAAS9B,QAG1B6B,CAA6CiD,GCzEtDK,qBACL,SAAAA,EAAYjF,GAAQ,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAA6E,GAAA/E,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+E,GAAA1E,KAAAH,KACbJ,0EAIN,OACCa,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACdH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAaC,QAASb,KAAKJ,MAAM0C,qBAAnD,aARwBhB,cAsBbC,cARS,SAAChB,GAAD,MAAY,CACnCsB,SAAUtB,EAAMsB,WAGU,SAACL,GAAD,MAAe,CACzCc,oBAAqB,kBAAMd,EAAS/B,QAGtB8B,CAA6CsD,GCJ7CC,mLAbb,OACErE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACdH,EAAAC,EAAAC,cAACoE,EAAD,MACAtE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqE,EAAD,MACAvE,EAAAC,EAAAC,cAACsE,EAAD,MACAxE,EAAAC,EAAAC,cAACuE,EAAD,MACAzE,EAAAC,EAAAC,cAACwE,EAAD,cATc7D,aCSJ8D,mLAVb,OACC3E,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,KACC5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWX,aALpBxD,aCOEoE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,+HCfOC,EAAcC,0BAAgB,CAACnE,SRwBrC,WAAmD,IAA9BtB,EAA8B0F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBrD,EAAcwD,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACzD,OAAQC,EAAO5G,MACd,KAAK6G,EACJ,IAAMC,EAAO,CAAElE,GAAIG,IAAezB,KAAMsF,EAAO3E,QAAQX,KAAMuB,YAAa+D,EAAO3E,QAAQY,aACzF,OAAOvC,OAAAyG,EAAA,EAAAzG,CAAA,GAAKS,EAAZ,CAAmBuB,MAAMhC,OAAA0G,EAAA,EAAA1G,CAAMS,EAAMuB,OAAbyC,OAAA,CAAoB+B,MAE7C,KAAKD,EACJ,OAAOvG,OAAAyG,EAAA,EAAAzG,CAAA,GAAKS,EAAZ,CAAmBuB,MAAOvB,EAAMuB,MAAM2E,OAAO,SAACH,GAAD,OAAUA,EAAKlE,KAAOgE,EAAO3E,QAAQW,OAEnF,KAAKiE,EACJ,OAAOvG,OAAAyG,EAAA,EAAAzG,CAAA,GACHS,EADJ,CAECsC,SAAUuD,EAAO3E,QAAQX,KACzBgC,gBAAiBsD,EAAO3E,QAAQY,YAChCU,aAAcqD,EAAO3E,QAAQW,KAG/B,KAAKiE,EACJ,OAAOvG,OAAAyG,EAAA,EAAAzG,CAAA,GACHS,EADJ,CAECuB,MAAOvB,EAAMuB,MAAMC,IAClB,SAACuE,GAAD,OACCA,EAAKlE,KAAO7B,EAAMwC,aAAlBjD,OAAAyG,EAAA,EAAAzG,CAAA,GACQwG,EADR,CACcxF,KAAMsF,EAAO3E,QAAQX,KAAMuB,YAAa+D,EAAO3E,QAAQY,cAClEiE,MAIP,KAAKD,EACJ,OAAOvG,OAAAyG,EAAA,EAAAzG,CAAA,GAAKS,EAAZ,CAAmByC,iBAAkBzC,EAAMyC,kBAE5C,KAAKqD,EACJ,OAAOvG,OAAAyG,EAAA,EAAAzG,CAAA,GAAKS,EAAZ,CAAmB0C,kBAAmB1C,EAAM0C,mBAE7C,KAAKoD,EACJ,OAAOvG,OAAAyG,EAAA,EAAAzG,CAAA,GAAKS,EAAZ,CAAmB2C,mBAAoB3C,EAAM2C,oBAG9C,QACC,OAAO3C,MS3DJmG,GAAgB,CAClBxE,IAAK,OACLyE,aAGIC,GAAmBC,YAAeH,GAAeX,GAEjDe,GAAQC,sBAAYH,GAAkB,GAAII,8BAAoBC,0BAAgBC,OAChFC,GAAYC,YAAaN,ICF/BO,IAASC,OACR7G,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAUT,MAAOA,IAChBrG,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAaC,QAAS,KAAMN,UAAWA,IACtC1G,EAAAC,EAAAC,cAAC+G,EAAD,QAGFC,SAASC,eAAe,SH8GnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b2dce4a6.chunk.js","sourcesContent":["export const ADD_TASK = '[AddTask] Add task';\r\nexport const DELETE_TASK = '[DeleteTask] Delete task from list';\r\nexport const SHOW_TASK = 'SHOW TASK action';\r\nexport const EDIT_TASK = 'EDIT TASK action';\r\nexport const SHOW_BUTTON_HANDLER = 'Toogle visible on/off';\r\nexport const ADD_DIALOG_HANDLER = 'Toggle Add dialog on/off';\r\nexport const EDIT_DIALOG_HANDLER = 'Toggle Edit dialog on/off';\r\n\r\nexport const addTaskAction = (payload) => ({ type: ADD_TASK, payload });\r\nexport const deleteTaskAction = (payload) => ({ type: DELETE_TASK, payload });\r\nexport const showTaskAction = (payload) => ({ type: SHOW_TASK, payload });\r\nexport const editTaskAction = (payload) => ({ type: EDIT_TASK, payload });\r\nexport const showButtonHandler = () => ({type: SHOW_BUTTON_HANDLER});\r\nexport const addDialogHandler = () => ({type: ADD_DIALOG_HANDLER});\r\nexport const editDialogHandler = () => ({type: EDIT_DIALOG_HANDLER});\r\n","import React from 'react';\r\nimport {\r\n\tdeleteTaskAction,\r\n\tshowTaskAction,\r\n\tshowButtonHandler,\r\n\teditDialogHandler\r\n} from '../../store/actions/todoListActions';\r\nimport { connect } from 'react-redux';\r\nimport { Component } from 'react';\r\nimport { Button } from 'primereact/button';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport './Task.scss';\r\n\r\nclass Task extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttaskDone: false\r\n\t\t}\r\n\t}\r\n\r\n\tlineThru = () =>{\r\n\t\tthis.setState({taskDone: !this.state.taskDone});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"Task\">\r\n\t\t\t\t<div className={this.props.taskDone !== true ? \"task-left-column\" : \"task-left-column-done\"} onClick={() => this.lineThru()}>\r\n\t\t\t\t\t<p> {this.props.name} </p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"task-right-column\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tlabel=\"Show\"\r\n\t\t\t\t\t\ticon=\"pi pi-info\"\r\n\t\t\t\t\t\tclassName=\"p-button-success\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tthis.props.showTask(this.props);\r\n\t\t\t\t\t\t\tthis.props.toggleShowTask();\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tlabel=\"Edit\"\r\n\t\t\t\t\t\ticon=\"pi pi-spinner\"\r\n\t\t\t\t\t\tclassName=\"p-button-text\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tthis.props.showTask(this.props);\r\n\t\t\t\t\t\t\tthis.props.toggleEditDialogHandler();\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tlabel=\"Delete\"\r\n\t\t\t\t\t\ticon=\"pi pi-ban\"\r\n\t\t\t\t\t\tclassName=\"p-button-danger\"\r\n\t\t\t\t\t\tonClick={() => this.props.deleteTask(this.props)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tdeleteTask: (payload) => dispatch(deleteTaskAction(payload)),\r\n\tshowTask: (payload) => dispatch(showTaskAction(payload)),\r\n\ttoggleShowTask: () => dispatch(showButtonHandler()),\r\n\ttoggleEditDialogHandler: () => dispatch(editDialogHandler())\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Task);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Task from '../Task/Task';\r\nimport { addDialogHandler } from '../../store/actions/todoListActions';\r\nimport './TodoList.scss';\r\n\r\nclass TodoList extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"TodoList\">\r\n\t\t\t\t{this.props.todoList.tasks.map((item, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"border\" key={index}>\r\n\t\t\t\t\t\t\t<Task id={item.id} name={item.name} description={item.description} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\ttodoList: state.todoList\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\ttoggleAddTaskDialog: () => dispatch(addDialogHandler())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\r\n","import * as TodoListAction from '../actions/todoListActions';\r\n\r\nexport const idGenerator = () => {\r\n\treturn '_' + Math.random().toString(36).substr(2, 9);\r\n};\r\n\r\nconst initialState = {\r\n\ttasks: [\r\n\t\t{\r\n\t\t\tid: idGenerator(),\r\n\t\t\tname: 'React',\r\n\t\t\tdescription: 'Develop your skills in react'\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: idGenerator(),\r\n\t\t\tname: 'Redux',\r\n\t\t\tdescription: 'develop your skills in redux'\r\n\t\t}\r\n\t],\r\n\tshowName: '',\r\n\tshowDescription: '',\r\n\teditedItemId: '',\r\n\tshowTaskVisible: false,\r\n\taddDialogVisible: false,\r\n\teditDialogVisible: false\r\n};\r\n\r\nexport function todoReducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase TodoListAction.ADD_TASK: {\r\n\t\t\tconst task = { id: idGenerator(), name: action.payload.name, description: action.payload.description };\r\n\t\t\treturn { ...state, tasks: [ ...state.tasks, task ] };\r\n\t\t}\r\n\t\tcase TodoListAction.DELETE_TASK: {\r\n\t\t\treturn { ...state, tasks: state.tasks.filter((task) => task.id !== action.payload.id) };\r\n\t\t}\r\n\t\tcase TodoListAction.SHOW_TASK: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshowName: action.payload.name,\r\n\t\t\t\tshowDescription: action.payload.description,\r\n\t\t\t\teditedItemId: action.payload.id\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase TodoListAction.EDIT_TASK: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: state.tasks.map(\r\n\t\t\t\t\t(task) =>\r\n\t\t\t\t\t\ttask.id === state.editedItemId\r\n\t\t\t\t\t\t\t? { ...task, name: action.payload.name, description: action.payload.description }\r\n\t\t\t\t\t\t\t: task\r\n\t\t\t\t)\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase TodoListAction.SHOW_BUTTON_HANDLER: {\r\n\t\t\treturn { ...state, showTaskVisible: !state.showTaskVisible };\r\n\t\t}\r\n\t\tcase TodoListAction.ADD_DIALOG_HANDLER: {\r\n\t\t\treturn { ...state, addDialogVisible: !state.addDialogVisible };\r\n\t\t}\r\n\t\tcase TodoListAction.EDIT_DIALOG_HANDLER: {\r\n\t\t\treturn { ...state, editDialogVisible: !state.editDialogVisible };\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addTaskAction, addDialogHandler } from '../../store/actions/todoListActions';\r\nimport './AddTask.scss';\r\nimport { idGenerator } from '../../store/reducers/todoListReducer';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\n\r\nclass AddTask extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\ttempName: '',\r\n\t\t\ttempDescription: ''\r\n\t\t};\r\n\t}\r\n\r\n\tsaveName = (e) => {\r\n\t\tthis.setState({ tempName: e.target.value });\r\n\t};\r\n\r\n\tsaveDescription = (e) => {\r\n\t\tthis.setState({ tempDescription: e.target.value });\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"AddTask\">\r\n\t\t\t\t<Dialog\r\n\t\t\t\t\theader=\"Adding new task\"\r\n\t\t\t\t\tvisible={this.props.todoList.addDialogVisible}\r\n\t\t\t\t\twidth=\"600px\"\r\n\t\t\t\t\tmodal={true}\r\n\t\t\t\t\tonHide={this.props.toggleAddTaskDialog}\r\n\t\t\t\t>\r\n\t\t\t\t\t<p>Title:</p>\r\n\t\t\t\t\t<input onChange={this.saveName} value={this.state.tempName} maxLength={70} />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<p>Description:</p>\r\n\t\t\t\t\t<textarea onChange={this.saveDescription} value={this.state.tempDescription} maxLength={400} />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t{this.state.tempName !== '' ? (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tlabel=\"Add\"\r\n\t\t\t\t\t\t\ticon=\"pi pi-plus-circle\"\r\n\t\t\t\t\t\t\tclassName=\"p-button-success\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.props.addItem({\r\n\t\t\t\t\t\t\t\t\tid: idGenerator(),\r\n\t\t\t\t\t\t\t\t\tname: this.state.tempName,\r\n\t\t\t\t\t\t\t\t\tdescription: this.state.tempDescription\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tthis.setState({ id: '', tempName: '', tempDescription: '' });\r\n\t\t\t\t\t\t\t\tthis.props.toggleAddTaskDialog();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tlabel=\"Add\"\r\n\t\t\t\t\t\t\ticon=\"pi pi-plus-circle\"\r\n\t\t\t\t\t\t\tclassName=\"p-button-success\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.props.addItem({\r\n\t\t\t\t\t\t\t\t\tid: idGenerator(),\r\n\t\t\t\t\t\t\t\t\tname: this.state.tempName,\r\n\t\t\t\t\t\t\t\t\tdescription: this.state.tempDescription\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tthis.setState({ id: '', tempName: '', tempDescription: '' });\r\n\t\t\t\t\t\t\t\tthis.props.toggleAddTaskDialog();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Dialog>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\taddItem: (payload) => dispatch(addTaskAction(payload)),\r\n\ttoggleAddTaskDialog: () => dispatch(addDialogHandler())\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n\ttodoList: state.todoList\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTask);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport './ShowTask.scss';\r\nimport { showButtonHandler } from '../../store/actions/todoListActions';\r\n\r\nclass ShowTask extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Dialog header={`${this.props.todoList.showName}`} visible={this.props.todoList.showTaskVisible} width=\"600px\" modal={true} onHide={this.props.toggleShowTask}>\r\n\t\t\t\t<div className=\"ShowTask\">\r\n\t\t\t\t\t<p>Task name:</p>\r\n\t\t\t\t\t<p>{this.props.todoList.showName}</p>\r\n\t\t\t\t\t<p>Task Description:</p>\r\n\t\t\t\t\t<p className=\"desc\">{this.props.todoList.showDescription}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</Dialog>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\ttodoList: state.todoList\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\ttoggleShowTask: () => dispatch(showButtonHandler())\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowTask);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './EditTask.scss';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { editTaskAction, editDialogHandler } from '../../store/actions/todoListActions';\r\nimport { Button } from 'primereact/button';\r\n\r\nclass EditTask extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tnewName: '',\r\n\t\t\tnewDescription: ''\r\n\t\t};\r\n\t}\r\n\r\n\tsaveName = (e) => {\r\n\t\tthis.setState({ newName: e.target.value });\r\n\t};\r\n\r\n\tsaveDescription = (e) => {\r\n\t\tthis.setState({ newDescription: e.target.value });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"EditTask\">\r\n\t\t\t\t<Dialog\r\n\t\t\t\t\theader={`You are editing ${this.props.todoList.showName} task`}\r\n\t\t\t\t\tvisible={this.props.todoList.editDialogVisible}\r\n\t\t\t\t\twidth=\"600px\"\r\n\t\t\t\t\tmodal={true}\r\n\t\t\t\t\tonHide={this.props.toggleEditDialogHandler}\r\n\t\t\t\t>\r\n\t\t\t\t\t<p>Enter new title</p>\r\n\t\t\t\t\t<input onChange={this.saveName} maxLength={70}/>\r\n\t\t\t\t\t<p>Enter new description</p>\r\n\t\t\t\t\t<textarea onChange={this.saveDescription} maxLength={400}/>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t{this.state.newName !== '' ? (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tlabel=\"Edit\"\r\n\t\t\t\t\t\t\ticon=\"pi pi-spinner\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.props.editTask({\r\n\t\t\t\t\t\t\t\t\tname: this.state.newName,\r\n\t\t\t\t\t\t\t\t\tdescription: this.state.newDescription\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tlabel=\"Edit\"\r\n\t\t\t\t\t\t\ticon=\"pi pi-spinner\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.props.editTask({\r\n\t\t\t\t\t\t\t\t\tname: this.state.newName,\r\n\t\t\t\t\t\t\t\t\tdescription: this.state.newDescription\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Dialog>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nconst mapStateToProps = (state) => ({\r\n\ttodoList: state.todoList\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\teditTask: (payload) => dispatch(editTaskAction(payload)),\r\n\ttoggleEditDialogHandler: () => dispatch(editDialogHandler())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTask);\r\n","import React, { Component } from 'react';\r\nimport { addDialogHandler } from '../../store/actions/todoListActions';\r\nimport { connect } from 'react-redux';\r\nimport './AddTaskButton.scss';\r\n\r\nclass AddTaskButton extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"AddTaskButton\">\r\n\t\t\t\t<button className=\"add-button\" onClick={this.props.toggleAddTaskDialog}>+</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\ttodoList: state.todoList\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\ttoggleAddTaskDialog: () => dispatch(addDialogHandler())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTaskButton);\r\n","import React, { Component } from 'react';\r\nimport './Main.scss';\r\nimport TodoList from '../TodoList/TodoList';\r\nimport AddTask from '../AddTask/AddTask';\r\nimport ShowTask from '../ShowTask/ShowTask';\r\nimport EditTask from '../EditTask/EditTask';\r\nimport AddTaskButton from '../AddTaskButton/AddTaskButton';\r\n\r\nclass Main extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t\t<div className=\"Main\">\r\n\t\t\t\t\t<TodoList/>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<AddTask />\r\n\t\t\t\t\t<ShowTask />\r\n\t\t\t\t\t<EditTask />\r\n\t\t\t\t\t<AddTaskButton />\r\n\t\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport Main from './components/Main/Main';\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t<div className=\"App\">\r\n\t\t\t\t\t<Route exact path=\"/\" component={Main} />\r\n\t\t\t\t</div>\r\n\t\t\t</BrowserRouter>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport {todoReducer} from './todoListReducer';\r\n\r\nexport const rootReducer = combineReducers({todoList: todoReducer});","import { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web and AsyncStorage for react-native\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n  }\r\n  \r\n  const persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\n  const store = createStore(persistedReducer, {}, composeWithDevTools(applyMiddleware(thunk)));\r\n  let persistor = persistStore(store)\r\n\r\n  export { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport Provider from 'react-redux/es/components/Provider';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport {store, persistor} from './store/localStorage/configureStore';\r\n\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<PersistGate loading={null} persistor={persistor}>\r\n\t\t\t<App />\r\n\t\t</PersistGate>\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}